package prodrucerconsume;

import java.util.*;
class Producer implements Runnable{
    ArrayList<Integer>b=null;
    final int limit =10;
    int i=0;
    Producer(ArrayList<Integer>buffer)
    {
        b=buffer;
    }
    public void run()
    {
        while(true){
            try{
            i++;
            produce(i);
            }
            catch(Exception e){
                System.out.println(e);
                
            }
        }
    }
    public void produce(int i) throws InterruptedException
    {
        synchronized(b){
            while(b.size()==limit){
                System.out.println("Producer is waiting for consumer ");
                b.wait();
            }
        }
         synchronized(b){
             b.add(i);
             System.out.println("Producer added item = "+i);
             Thread.sleep(100);
             b.notify();
         }
    }
}
class Consumer implements Runnable{
    ArrayList<Integer>b=null;
    int i=0;
    Consumer(ArrayList<Integer>buffer)
    {
        b=buffer;
    }
    public void run()
    {
        while(true){
            try{
            
            consume();
            }
            catch(Exception e){
                System.out.println(e);
                
            }
        }
    }
    public void consume() throws InterruptedException
    {
        synchronized(b){
            while(b.isEmpty()){
                System.out.println("Consumer is waiting for Producer");
                b.wait();
            }
        }
         synchronized(b){
             b.remove(0);
             System.out.println("Consumer removed item");
             Thread.sleep(100);
             b.notify();
         }
    }
}
public class ProdrucerConsume {
    public static void main(String[] args) {
        ArrayList<Integer>buffer=new ArrayList<Integer>();
        Thread t1=new Thread(new Producer(buffer));
        Thread t2=new Thread(new Consumer(buffer));
        t1.start();
        t2.start();
    }
    
}

OUTPUT:

run:
Producer added item = 1
Consumer removed item
Producer added item = 2
Consumer removed item
Producer added item = 3
Producer added item = 4
Consumer removed item
Consumer removed item
Consumer is waiting for Producer
Producer added item = 5
Producer added item = 6
Consumer removed item
Consumer removed item
Consumer is waiting for Producer
Producer added item = 7
Producer added item = 8
Producer added item = 9
Producer added item = 10
Producer added item = 11
Producer added item = 12
Producer added item = 13
Producer added item = 14
Consumer removed item
Consumer removed item
Consumer removed item
Consumer removed item
Consumer removed item
Consumer removed item
Consumer removed item
Consumer removed item
Consumer is waiting for Producer
Producer added item = 15
Producer added item = 16
Producer added item = 17
Producer added item = 18
Producer added item = 19
Producer added item = 20
Producer added item = 21
Producer added item = 22
Producer added item = 23
